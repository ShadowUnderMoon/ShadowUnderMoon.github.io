<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>爱吃芒果</title>
        <link>http://example.org/</link>
        <description>This is my cool site</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 13 May 2025 22:33:46 &#43;0800</lastBuildDate>
            <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Grpc Metric</title>
    <link>http://example.org/posts/grpc-metric/</link>
    <pubDate>Tue, 13 May 2025 22:33:46 &#43;0800</pubDate>
    <author>爱吃芒果</author>
    <guid>http://example.org/posts/grpc-metric/</guid>
    <description><![CDATA[<h2 id="opentelemetry">OpenTelemetry</h2>
<p>OpenTelemetry是CNCF孵化的开源观测框架，用于创建和管理遥测数据（telemetry），比如metrics, tracing, logs。这一项目的核心目标是避免依赖于vendor，从而可以更好地集成和拓展。</p>]]></description>
</item>
<item>
    <title>Spark逻辑处理流程</title>
    <link>http://example.org/posts/spark_logical_plan/</link>
    <pubDate>Sun, 11 May 2025 15:20:27 &#43;0800</pubDate>
    <author>爱吃芒果</author>
    <guid>http://example.org/posts/spark_logical_plan/</guid>
    <description><![CDATA[<p>Spark应用程序需要先转化为逻辑处理流程，逻辑处理流程主要包括：</p>
<ul>
<li>RDD数据模型</li>
<li>数据操作</li>
<li>数据依赖关系</li>
</ul>
<p>数据操作分为两种，<code>transformation</code>操作并不会触发job的实际执行，<code>action</code>操作创建job并立即执行。类似于java中的stream，采用懒加载的方式。</p>]]></description>
</item>
<item>
    <title>Spark StandAlone</title>
    <link>http://example.org/posts/spark-base/</link>
    <pubDate>Sat, 10 May 2025 11:51:10 &#43;0800</pubDate>
    <author>爱吃芒果</author>
    <guid>http://example.org/posts/spark-base/</guid>
    <description><![CDATA[<h2 id="参考文献">参考文献 </h2>
<ol>
<li>大数据处理框架 Apache Spark设计与实现</li>
</ol>]]></description>
</item>
<item>
    <title>Grpc源码分析</title>
    <link>http://example.org/posts/grpc-in-practice/</link>
    <pubDate>Fri, 02 May 2025 13:26:57 &#43;0800</pubDate>
    <author>爱吃芒果</author>
    <guid>http://example.org/posts/grpc-in-practice/</guid>
    <description><![CDATA[<h2 id="gprc流程概括">gprc流程概括</h2>
<p></p>
<p>grpc的流程可以大致分成两个阶段，分别为grpc连接阶段和grpc交互阶段，如图所示（此图来自后面的参考文献）。</p>
<p>在RPC连接阶段，client和server之间建立起TCP连接，grpc底层依赖于HTTP2，因此client和server还需要协调frame的相关设置，例如frame的大小，滑动窗口的大小等。</p>]]></description>
</item>
<item>
    <title>Java内存模型</title>
    <link>http://example.org/posts/java-concurrency-jmm/</link>
    <pubDate>Mon, 28 Apr 2025 22:02:31 &#43;0800</pubDate>
    <author>爱吃芒果</author>
    <guid>http://example.org/posts/java-concurrency-jmm/</guid>
    <description><![CDATA[<h2 id="阅前须知">阅前须知</h2>]]></description>
</item>
<item>
    <title>Java线程池源码分析</title>
    <link>http://example.org/posts/java_thread_pool/</link>
    <pubDate>Sat, 26 Apr 2025 09:47:55 &#43;0800</pubDate>
    <author>爱吃芒果</author>
    <guid>http://example.org/posts/java_thread_pool/</guid>
    <description><![CDATA[<h2 id="阅前提示">阅前提示</h2>
<p>参考文献中的文章非常的好，基本看完了就能理解很多东西，推荐阅读</p>
<p>源码中也提供了很多注释文本，推荐对照源码学习。</p>
<h2 id="重要概念和接口">重要概念和接口</h2>
<h3 id="runnable-接口">Runnable 接口</h3>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@FunctionalInterface</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">interface</span> <span class="nc">Runnable</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">abstract</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">run</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span></span></span></code></pre></div></div>
<p>线程可以接受一个实现 Runnable 接口的对象，并执行对应的逻辑。</p>]]></description>
</item>
<item>
    <title>Spark开发环境搭建</title>
    <link>http://example.org/posts/spark_developement_envrionment/</link>
    <pubDate>Sat, 05 Apr 2025 22:05:09 &#43;0800</pubDate>
    <author>爱吃芒果</author>
    <guid>http://example.org/posts/spark_developement_envrionment/</guid>
    <description><![CDATA[<p>通过如下的方法在idea中配置spark开发环境，最后和一般的java项目一样，使用maven面板的 clean和package进行编译。</p>
<p>我实际使用的编译器为java17，idea会提示配置scala编译器。</p>]]></description>
</item>
<item>
    <title>Spark内存管理</title>
    <link>http://example.org/posts/spark_memory_manager/</link>
    <pubDate>Sun, 09 Mar 2025 22:32:09 &#43;0800</pubDate>
    <author>爱吃芒果</author>
    <guid>http://example.org/posts/spark_memory_manager/</guid>
    <description><![CDATA[<h2 id="关键问题">关键问题</h2>
<ol>
<li>
<p>内存被分成哪些区域，各分区之间的关系是什么，通过什么参数控制</p>
</li>
<li>
<p>内存上报和释放的单位是什么，上报和释放是如何实现的</p>
</li>
<li>
<p>如何避免内存没有释放导致资源泄露</p>
</li>
<li>
<p>如何避免重复上报和漏上报问题</p>]]></description>
</item>
<item>
    <title>k8s 存储</title>
    <link>http://example.org/posts/k8s_storage/</link>
    <pubDate>Fri, 07 Feb 2025 10:49:01 &#43;0800</pubDate>
    <author>爱吃芒果</author>
    <guid>http://example.org/posts/k8s_storage/</guid>
    <description><![CDATA[<h2 id="pods">Pods</h2>
<p>Pod 是 Kubernetes 中最小的可部署计算单元，你可以创建和管理它们。</p>
<p><strong>Pod（类似于一群鲸鱼的“pod”或豌豆荚“pea pod”）</strong> 是一组一个或多个容器，这些容器共享存储和网络资源，并且有一个规范来定义如何运行它们。Pod 内部的内容始终是 <strong>共同调度（co-scheduled）并在相同的上下文中运行</strong> 的。Pod 充当一个特定应用的“<strong>逻辑主机</strong>”（logical host）：它包含一个或多个 <strong>相对紧密耦合的应用容器</strong>。在非云环境下，运行在同一台物理机或虚拟机上的应用程序，可以类比于在 Kubernetes 中运行在同一逻辑主机上的应用。</p>]]></description>
</item>
<item>
    <title>Prometheus_and_grafana</title>
    <link>http://example.org/posts/prometheus_and_grafana/</link>
    <pubDate>Sat, 01 Feb 2025 19:42:56 &#43;0800</pubDate>
    <author>爱吃芒果</author>
    <guid>http://example.org/posts/prometheus_and_grafana/</guid>
    <description><![CDATA[<h2 id="prometheus">Prometheus</h2>
<p><a href="https://www.youtube.com/watch?v=h4Sl21AKiDg" target="_blank" rel="noopener noreffer ">https://www.youtube.com/watch?v=h4Sl21AKiDg</a></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p>Prometheus Server, Pushgateway, Alertmanager</p>
<p><a href="https://prometheus.io/docs/concepts/metric_types/" target="_blank" rel="noopener noreffer ">https://prometheus.io/docs/concepts/metric_types/</a></p>
<p><a href="https://itnext.io/prometheus-for-beginners-5f20c2e89b6c" target="_blank" rel="noopener noreffer ">https://itnext.io/prometheus-for-beginners-5f20c2e89b6c</a></p>
<p><strong>Prometheus is essentially just another metrics collection and analysis tool,</strong> and at its core it is made up of 3 components:</p>]]></description>
</item>
</channel>
</rss>
